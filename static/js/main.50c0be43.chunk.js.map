{"version":3,"sources":["Snake.jsx","Food.jsx","Music.jsx","Insctuction.jsx","App.jsx","index.js"],"names":["props","snakeDots","map","dot","i","style","left","top","className","Music","url","useState","Audio","audio","playing","setPlaying","useEffect","play","pause","addEventListener","removeEventListener","useAudio","toggle","onClick","Insctuction","Component","getRandomCoordinates","Math","floor","random","initialState","food","status","speed","direction","highScore","Number","localStorage","getItem","newHighScore","isStarted","isEnded","Game","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","push","shift","isGameOver","bind","isStartGame","restartGame","setInterval","this","document","onkeydown","prevState","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","snake","pop","forEach","enlargeSnake","increaseSpeed","setItem","newSnake","unshift","console","log","id","Snake","Food","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50c0be43.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      {props.snakeDots.map((dot, i) => {\r\n        const style = {\r\n          left: `${dot[0]}%`,\r\n          top: `${dot[1]}%`\r\n        }\r\n        return (\r\n          <div className=\"snake\" key={i} style={style}></div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n\r\n  const style = {\r\n    left: `${props.dot[0]}%`,\r\n    top: `${props.dot[1]}%`\r\n  }\r\n\r\n  return (\r\n    <div className=\"food\" style={style}></div>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useAudio = url => {\r\n  const [audio] = useState(new Audio(url));\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const toggle = () => setPlaying(!playing);\r\n\r\n  useEffect(() => {\r\n      playing ? audio.play() : audio.pause();\r\n    },\r\n    [playing]\r\n  );\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener('ended', () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener('ended', () => setPlaying(false));\r\n    };\r\n  }, []);\r\n\r\n  return [playing, toggle];\r\n};\r\n\r\nconst Music = ({ url }) => {\r\n  const [playing, toggle] = useAudio(url);\r\n  return (\r\n    <div >\r\n     <button className = \"music\" onClick={toggle}>{playing ? \"üîàOff\" : \"üîäOn\"}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Music;","import React, { Component } from 'react';\r\nclass Insctuction extends Component {\r\n    render() {\r\n      return(\r\n          <div className = \"instr\">\r\n            <h2>Hotkeys</h2>\r\n              <div>\r\n              <ul>\r\n                  <li>‚¨ÜÔ∏è - keys UP and W</li>\r\n                  <li>‚¨áÔ∏è - keys DOWN and S</li>\r\n                  <li>‚¨ÖÔ∏è - keys LEFT and A</li>\r\n                  <li>‚û°Ô∏è - keys RIGHT and D</li>\r\n            </ul>\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n  }\r\n  export default Insctuction;","import React, { Component } from 'react';\r\nimport Snake from './Snake';\r\nimport Food from './Food';\r\nimport './SnakeGame.css';\r\nimport Music from './Music';\r\nimport Instruction from './Insctuction';\r\n\r\nconst getRandomCoordinates = () => {\r\n    let min = 1;\r\n    let max = 98;\r\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n    return [x, y]\r\n}\r\n\r\nconst initialState = {\r\n    food: getRandomCoordinates(),\r\n    status: 0,\r\n    speed: 150,\r\n    direction: 'RIGHT',\r\n    snakeDots: [\r\n        [0, 0],\r\n        [2, 0]\r\n    ],\r\n    highScore: Number(localStorage.getItem('snakeHighScore')) || 0,\r\n    newHighScore: false,\r\n    isStarted: false,\r\n    isEnded: false,\r\n}\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.isGameOver = this.isGameOver.bind(this);\r\n        this.isStartGame = this.isStartGame.bind(this);\r\n        this.restartGame = this.restartGame.bind(this);\r\n    }\r\n    state = initialState;\r\n\r\n    componentDidMount() {\r\n        setInterval(this.moveSnake, this.state.speed);\r\n        document.onkeydown = this.onKeyDown;\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (prevState.status != 2 && this.state.isEnded !== true) {\r\n            this.checkIfOutOfBorders();\r\n            this.checkIfCollapsed();\r\n            this.checkIfEat();\r\n        }\r\n    }\r\n\r\n    onKeyDown = (e) => {\r\n        e = e || window.event;\r\n        switch (e.keyCode) {\r\n            case 38:\r\n                this.setState({ direction: 'UP' });\r\n                break;\r\n            case 40:\r\n                this.setState({ direction: 'DOWN' });\r\n                break;\r\n            case 37:\r\n                this.setState({ direction: 'LEFT' });\r\n                break;\r\n            case 39:\r\n                this.setState({ direction: 'RIGHT' });\r\n                break;\r\n            case 68:\r\n                this.setState({ direction: 'D' });\r\n                break;\r\n            case 65:\r\n                this.setState({ direction: 'A' });\r\n                break;\r\n            case 83:\r\n                this.setState({ direction: 'S' });\r\n                break;\r\n            case 87:\r\n                this.setState({ direction: 'W' });\r\n                break;\r\n        }\r\n    }\r\n\r\n    moveSnake = () => {\r\n        let dots = [...this.state.snakeDots];\r\n        let head = dots[dots.length - 1];\r\n        const { speed, isStarted } = this.state;\r\n\r\n        switch (this.state.direction) {\r\n            case 'RIGHT':\r\n                head = [head[0] + 2, head[1]];\r\n                break;\r\n            case 'LEFT':\r\n                head = [head[0] - 2, head[1]];\r\n                break;\r\n            case 'DOWN':\r\n                head = [head[0], head[1] + 2];\r\n                break;\r\n            case 'UP':\r\n                head = [head[0], head[1] - 2];\r\n                break;\r\n            case 'D':\r\n                head = [head[0] + 2, head[1]];\r\n                break;\r\n            case 'A':\r\n                head = [head[0] - 2, head[1]];\r\n                break;\r\n            case 'S':\r\n                head = [head[0], head[1] + 2];\r\n                break;\r\n            case 'W':\r\n                head = [head[0], head[1] - 2];\r\n                break;\r\n        }\r\n        dots.push(head);\r\n        dots.shift();\r\n        isStarted === true && speed != 0 && this.setState({\r\n            snakeDots: dots\r\n        })\r\n    }\r\n\r\n    checkIfOutOfBorders() {\r\n        let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n        if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\r\n            this.isGameOver();\r\n        }\r\n    }\r\n\r\n    checkIfCollapsed() {\r\n        let snake = [...this.state.snakeDots];\r\n        let head = snake[snake.length - 1];\r\n        snake.pop();\r\n        snake.forEach(dot => {\r\n            if (head[0] == dot[0] && head[1] == dot[1]) {\r\n                this.isGameOver();\r\n            }\r\n        })\r\n    }\r\n\r\n    checkIfEat() {\r\n        let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n        let food = this.state.food;\r\n        if (head[0] == food[0] && head[1] == food[1]) {\r\n            this.setState({\r\n                food: getRandomCoordinates()\r\n            })\r\n            this.enlargeSnake();\r\n            this.increaseSpeed();\r\n        }\r\n        if (this.state.snakeDots.length >= initialState.highScore) {\r\n            initialState.highScore++\r\n            localStorage.setItem('snakeHighScore', initialState.highScore - 1)\r\n            initialState.newHighScore = true\r\n        }\r\n    }\r\n\r\n    enlargeSnake() {\r\n        let newSnake = [...this.state.snakeDots];\r\n        newSnake.unshift([])\r\n        this.setState({\r\n            snakeDots: newSnake\r\n        })\r\n    }\r\n\r\n    increaseSpeed() {\r\n        if (this.state.speed > 10) {\r\n            this.setState({\r\n                speed: this.state.speed - 10\r\n            })\r\n        }\r\n    }\r\n    isStartGame() {\r\n        this.setState({\r\n            status: 1,\r\n            isStarted: true,\r\n        })\r\n    }\r\n    isGameOver() {\r\n        this.setState({\r\n            isEnded: true,\r\n            speed: 0,\r\n            status: 2,\r\n        })\r\n    }\r\n    restartGame() {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.status)\r\n        if (this.state.status === 0 && this.state.isEnded !== true) {\r\n            return (\r\n                <div>\r\n                <div className=\"startgame\">\r\n                    <div>SNAKE</div>\r\n                    <button className = \"button\" onClick={this.isStartGame}>Start Game</button>\r\n                </div>\r\n                <Instruction />\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.state.status === 2) {\r\n            return (\r\n                <div className=\"gameover\">\r\n                    <div id='GameOverText'>GAME OVER</div>\r\n                    <div>Your score: {this.state.snakeDots.length}</div>\r\n                    <div>\r\n                        {this.state.newHighScore ? 'New local ' : 'Local '}high score:{' '}\r\n                        {this.state.highScore}\r\n                    </div>\r\n                    <div className=\"restart\" onClick={this.restartGame}>Press to restart</div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"name-game\">SNAKE</div>\r\n                <div className = \"container\">\r\n                <button className = \"music\" id = \"mainRestart\" onClick = {this.restartGame}>New Game</button>\r\n                <Music url={'https://d7.hotplayer.ru/download/83cd30bc87ac1216b7890e617fb1b8b1/156905203_456240033/11c61541d908c-1af6714942e4-566d8e6e6ff/Hotline%20Miami%202%3A%20Wrong%20Number%20%28Confirmed%20Soundtrack%29%20-%20M.O.O.N.%20-%20Dust.mp3'} />\r\n                </div>\r\n                <div className=\"area\">\r\n                    <Snake snakeDots={this.state.snakeDots} />\r\n                    <Food dot={this.state.food} />\r\n                </div>\r\n                <div className='score'>\r\n                    HIGH-SCORE: {this.state.highScore}&ensp;&ensp;&ensp;&ensp;SCORE:{' '}\r\n                    {this.state.snakeDots.length}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Game />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}